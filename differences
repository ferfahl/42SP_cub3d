diff --git a/Makefile b/Makefile
index 46d750d..9f215c9 100644
--- a/Makefile
+++ b/Makefile
@@ -62,7 +62,6 @@ MANDATORY_FILES =	$(3D)/render_walls.c				\
 					${CHECKS}/01_check_args.c			\
 					${CHECKS}/02_check_textures.c		\
 					${CHECKS}/03_check_colors.c			\
-					${CHECKS}/gnl.c			 			\
 					${PLAYER}/player_moves.c			\
 					${RAY}/cast_rays.c					\
 					${RAY}/find_hit_horz.c				\
diff --git a/header/cub3d.h b/header/cub3d.h
index aecf812..753eed2 100644
--- a/header/cub3d.h
+++ b/header/cub3d.h
@@ -3,10 +3,10 @@
 /*                                                        :::      ::::::::   */
 /*   cub3d.h                                            :+:      :+:    :+:   */
 /*                                                    +:+ +:+         +:+     */
-/*   By: rarobert <rarobert@student.42sp.org.br>    +#+  +:+       +#+        */
+/*   By: feralves <feralves@student.42sp.org.br>    +#+  +:+       +#+        */
 /*                                                +#+#+#+#+#+   +#+           */
 /*   Created: 2023/06/20 16:33:44 by feralves          #+#    #+#             */
-/*   Updated: 2023/08/20 16:23:42 by rarobert         ###   ########.fr       */
+/*   Updated: 2023/08/20 15:42:35 by feralves         ###   ########.fr       */
 /*                                                                            */
 /* ************************************************************************** */
 
@@ -26,103 +26,14 @@
 # include <fcntl.h>
 # include <errno.h>
 
-typedef struct s_map_line
-{
-	char				*line;
-	struct s_map_line	*next;
-}				t_map_line;
-
-typedef struct s_list_gnl
-{
-	char				*str;
-	struct s_list_gnl	*next;
-}				t_list_gnl;
-
-typedef struct s_input
-{
-	int		has_no;
-	int		has_so;
-	int		has_we;
-	int		has_ea;
-	int		has_f;
-	int		has_c;
-	int		no_fd;
-	int		so_fd;
-	int		we_fd;
-	int		ea_fd;
-	int		f;
-	int		c;
-	size_t	map_height;
-	size_t	map_width;
-}				t_input;
-
-typedef struct s_pos
-{
-	int		x;
-	int		y;
-}				t_pos;
-
-typedef struct s_point
-{
-	float	x;
-	float	y;
-}				t_point;
-
-typedef struct s_player
-{
-	float	angle;
-	float	x;
-	float	y;
-	float	rotate;
-	int		turn_direction;
-	int		walk_direction;
-}				t_player;
-
-typedef struct s_rays
-{
-	int		facing_down;
-	int		facing_up;
-	int		facing_right;
-	int		facing_left;
-	int		was_hit_vert;
-	float	angle;
-	float	dist;
-	t_point	init;
-	t_point	wall_hit;
-}				t_rays;
-
-typedef struct s_image
-{
-	void	*ptr;
-	int		*data;
-	int		bpp;
-	int		line_len;
-	int		endian;
-}				t_image;
-
-typedef struct s_map
-{
-	int		north;
-	int		south;
-	int		east;
-	int		west;
-	int		floor;
-	int		ceiling;
-	int		x_len;
-	int		y_len;
-	int		**map;
-}				t_map;
-
-typedef struct s_vars
-{
-	int			nbr_rays;
-	void		*mlx;
-	void		*win;
-	t_map		*fullmap;
-	t_rays		*rays;
-	t_image		img;
-	t_player	*player;
-}				t_vars;
+typedef struct s_input	t_input;
+typedef struct s_pos	t_pos;
+typedef struct s_hit	t_hit;
+typedef struct s_player	t_player;
+typedef struct s_rays	t_rays;
+typedef struct s_image	t_image;
+typedef struct s_map	t_map;
+typedef struct s_cub	t_cub;
 
 //exit.c
 void	if_error(char *str);
@@ -208,8 +119,6 @@ int		check_c(char *line, t_input *input);
 int		check_f(char *line, t_input *input);
 
 void	check_all(char *line, t_input *input);
-char	*gnl(int fd);
-t_map	*map_reader(int fd, t_input *input);
 
 void	generate_projection(t_cub *cub);
 int		wall_strip(t_cub *cub, int x);
diff --git a/libft/getnextline/get_next_line.c b/libft/getnextline/get_next_line.c
index ea200b9..605d6f3 100644
--- a/libft/getnextline/get_next_line.c
+++ b/libft/getnextline/get_next_line.c
@@ -6,7 +6,7 @@
 /*   By: feralves <feralves@student.42sp.org.br>    +#+  +:+       +#+        */
 /*                                                +#+#+#+#+#+   +#+           */
 /*   Created: 2022/07/31 06:49:03 by feralves          #+#    #+#             */
-/*   Updated: 2023/08/20 15:02:13 by feralves         ###   ########.fr       */
+/*   Updated: 2023/06/27 16:39:43 by feralves         ###   ########.fr       */
 /*                                                                            */
 /* ************************************************************************** */
 
@@ -22,7 +22,7 @@ char	*reading(int fd)
 		return (NULL);
 	reader[0] = '\0';
 	size = read(fd, reader, BUFFER_SIZE);
-	if (size <= 0)
+	if (size == 0)
 	{
 		free(reader);
 		return (NULL);
@@ -90,7 +90,6 @@ char	*ft_return_line(int fd)
 		remains = NULL;
 	reader = reading(fd);
 	full_line = ft_strjoin_free(remains, reader);
-	free(reader);
 	if (ft_strlen(full_line) == 0)
 	{
 		free(full_line);
diff --git a/libft/more_functions/ft_strisdigit.c b/libft/more_functions/ft_strisdigit.c
index 9324850..8954c30 100644
--- a/libft/more_functions/ft_strisdigit.c
+++ b/libft/more_functions/ft_strisdigit.c
@@ -1,12 +1,12 @@
 /* ************************************************************************** */
 /*                                                                            */
 /*                                                        :::      ::::::::   */
-/*   ft_strisdigit.c                                    :+:      :+:    :+:   */
+/*   ft_strisdigit.c                                   :+:      :+:    :+:   */
 /*                                                    +:+ +:+         +:+     */
-/*   By: feralves <feralves@student.42sp.org.br>    +#+  +:+       +#+        */
+/*   By: rarobert <rarobert@student.42sp.org.br>    +#+  +:+       +#+        */
 /*                                                +#+#+#+#+#+   +#+           */
-/*   Created: 2023/08/17 18:22:00 by feralves          #+#    #+#             */
-/*   Updated: 2023/08/17 18:22:03 by feralves         ###   ########.fr       */
+/*   Created: 2023/03/30 17:30:59 by feralves          #+#    #+#             */
+/*   Updated: 2023/08/16 20:08:03 by rarobert         ###   ########.fr       */
 /*                                                                            */
 /* ************************************************************************** */
 
diff --git a/libft/more_functions/ft_strtrim_whitespaces.c b/libft/more_functions/ft_strtrim_whitespaces.c
index 4e434ef..da54434 100644
--- a/libft/more_functions/ft_strtrim_whitespaces.c
+++ b/libft/more_functions/ft_strtrim_whitespaces.c
@@ -3,10 +3,10 @@
 /*                                                        :::      ::::::::   */
 /*   ft_strtrim_whitespaces.c                           :+:      :+:    :+:   */
 /*                                                    +:+ +:+         +:+     */
-/*   By: rarobert <rarobert@student.42sp.org.br>    +#+  +:+       +#+        */
+/*   By: feralves <feralves@student.42sp.org.br>    +#+  +:+       +#+        */
 /*                                                +#+#+#+#+#+   +#+           */
 /*   Created: 2023/08/16 20:34:26 by rarobert          #+#    #+#             */
-/*   Updated: 2023/08/20 16:13:23 by rarobert         ###   ########.fr       */
+/*   Updated: 2023/08/19 13:37:23 by feralves         ###   ########.fr       */
 /*                                                                            */
 /* ************************************************************************** */
 
@@ -15,7 +15,6 @@
 char	*ft_strtrim_whitespaces(const char *str)
 {
 	char	*whitespaces;
-	char	*trimmed;
 
 	whitespaces = malloc(sizeof(char) * 8);
 	whitespaces[0] = 9;
@@ -26,7 +25,5 @@ char	*ft_strtrim_whitespaces(const char *str)
 	whitespaces[5] = 32;
 	whitespaces[6] = '\n';
 	whitespaces[7] = 0;
-	trimmed = ft_strtrim(str, whitespaces);
-	free(whitespaces);
-	return (trimmed);
+	return (ft_strtrim(str, whitespaces));
 }
diff --git a/map.cub b/map.cub
index a858df0..81a2826 100644
--- a/map.cub
+++ b/map.cub
@@ -6,10 +6,10 @@ EA ./assets/textures/east.xpm
 F 220,100,0
 C 225,30,0
 
-        1111111111111111111111111
-        1000000000110000000000001
-        1011000001110000000000001
-        1001000000000000000000001
+1111111111111111111111111
+1000000000110000000000001
+1011000001110000000000001
+1001000000000000000000001
 111111111011000001110000000000001
 100000000011000001110111111111111
 11110111111111011100000010001
@@ -19,22 +19,4 @@ C 225,30,0
 10000000000000001101010010001
 11000001110101011111011110N0111
 11110111 1110101 101111010001
-11111111 1111111 111111111011
-                         111
-111111111111111111111111111111
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-   
\ No newline at end of file
+11111111 1111111 111111111111
diff --git a/sources/checks/02_check_textures.c b/sources/checks/02_check_textures.c
index dbe5868..6f29bf4 100644
--- a/sources/checks/02_check_textures.c
+++ b/sources/checks/02_check_textures.c
@@ -6,7 +6,7 @@
 /*   By: rarobert <rarobert@student.42sp.org.br>    +#+  +:+       +#+        */
 /*                                                +#+#+#+#+#+   +#+           */
 /*   Created: 2023/08/16 20:27:59 by rarobert          #+#    #+#             */
-/*   Updated: 2023/08/17 17:04:31 by rarobert         ###   ########.fr       */
+/*   Updated: 2023/08/16 20:44:53 by rarobert         ###   ########.fr       */
 /*                                                                            */
 /* ************************************************************************** */
 
@@ -24,10 +24,10 @@ int	check_no(char *line, t_input *input)
 		input->has_no = TRUE;
 		trimmed = ft_strtrim_whitespaces(line + 2);
 		fd = open_file(trimmed);
-		free(trimmed);
 		if (fd < 0)
 			return (ft_error("Invalid NO texture"));
 		input->no_fd = fd;
+		close(fd);
 	}
 	return (0);
 }
@@ -44,10 +44,10 @@ int	check_so(char *line, t_input *input)
 		input->has_so = TRUE;
 		trimmed = ft_strtrim_whitespaces(line + 2);
 		fd = open_file(trimmed);
-		free(trimmed);
 		if (fd < 0)
 			return (ft_error("Invalid SO texture"));
 		input->so_fd = fd;
+		close(fd);
 	}
 	return (0);
 }
@@ -64,10 +64,10 @@ int	check_we(char *line, t_input *input)
 		input->has_we = TRUE;
 		trimmed = ft_strtrim_whitespaces(line + 2);
 		fd = open_file(trimmed);
-		free(trimmed);
 		if (fd < 0)
 			return (ft_error("Invalid WE texture"));
 		input->we_fd = fd;
+		close(fd);
 	}
 	return (0);
 }
@@ -84,10 +84,10 @@ int	check_ea(char *line, t_input *input)
 		input->has_ea = TRUE;
 		trimmed = ft_strtrim_whitespaces(line + 2);
 		fd = open_file(trimmed);
-		free(trimmed);
 		if (fd < 0)
 			return (ft_error("Invalid EA texture"));
 		input->ea_fd = fd;
+		close(fd);
 	}
 	return (0);
 }
diff --git a/sources/checks/gnl.c b/sources/checks/gnl.c
deleted file mode 100644
index 83f66bf..0000000
--- a/sources/checks/gnl.c
+++ /dev/null
@@ -1,139 +0,0 @@
-/* ************************************************************************** */
-/*                                                                            */
-/*                                                        :::      ::::::::   */
-/*   gnl.c                                              :+:      :+:    :+:   */
-/*                                                    +:+ +:+         +:+     */
-/*   By: rarobert <rarobert@student.42sp.org.br>    +#+  +:+       +#+        */
-/*                                                +#+#+#+#+#+   +#+           */
-/*   Created: 2023/08/16 21:17:49 by rarobert          #+#    #+#             */
-/*   Updated: 2023/08/16 21:21:31 by rarobert         ###   ########.fr       */
-/*                                                                            */
-/* ************************************************************************** */
-
-#include "cub3d.h"
-
-char	get_next_char(int fd)
-{
-	ssize_t	x;
-	char	c;
-
-	c = 0;
-	x = read(fd, &c, 1);
-	if (x > 0)
-		return (c);
-	return (0);
-}
-
-t_list_gnl	*ft_lstnew_gnl(void)
-{
-	t_list_gnl	*node;
-
-	node = (t_list_gnl *)malloc(sizeof(t_list_gnl));
-	if (!node)
-		return (NULL);
-	node->next = NULL;
-	return (node);
-}
-
-char	*get_string(t_list_gnl *lst, size_t len)
-{
-	size_t	i;
-	size_t	j;
-	char	*str;
-
-	str = (char *)malloc(sizeof(char) * (len + 1));
-	i = 0;
-	while (lst)
-	{
-		j = 0;
-		while (lst->str[j])
-		{
-			str[i + j] = lst->str[j];
-			j++;
-		}
-		i += j;
-		lst = lst->next;
-	}
-	str[i] = '\0';
-	return (str);
-}
-
-int	ft_dec_lst_size(t_list_gnl *lst)
-{
-	int	counter;
-
-	counter = 0;
-	while (lst)
-	{
-		counter++;
-		lst = lst->next;
-	}
-	return (counter - 1);
-}
-
-void	ft_lstclear_gnl(t_list_gnl *lst)
-{
-	t_list_gnl	*aux;
-	t_list_gnl	*i;
-
-	i = lst;
-	while (i)
-	{
-		free(i->str);
-		aux = i;
-		i = i->next;
-		free(aux);
-	}
-}
-
-void	fill_list(int fd, t_list_gnl *to_fill)
-{
-	char	c;
-	size_t	i;
-
-	i = 0;
-	c = 1;
-	while (c)
-	{
-		to_fill->str = (char *)malloc(sizeof(char) * (BUFFER_SIZE + 1));
-		while (c && i < BUFFER_SIZE)
-		{
-			c = get_next_char(fd);
-			to_fill->str[i++] = c;
-			if (c == '\n')
-				break ;
-		}
-		to_fill->str[i] = '\0';
-		if (c == '\n')
-			break ;
-		if (c)
-		{
-			i = 0;
-			to_fill->next = ft_lstnew_gnl();
-			to_fill = to_fill->next;
-		}
-	}
-}
-
-char	*gnl(int fd)
-{
-	t_list_gnl	*line;
-	t_list_gnl	*start;
-	char		*next_line;
-	size_t		i;
-
-	line = ft_lstnew_gnl();
-	start = line;
-	fill_list(fd, line);
-	while (line->next)
-		line = line->next;
-	i = ft_strlen(line->str) + (BUFFER_SIZE * (ft_dec_lst_size(start)));
-	next_line = get_string(start, i);
-	ft_lstclear_gnl(start);
-	if (!next_line[0])
-	{
-		free (next_line);
-		return (NULL);
-	}
-	return (next_line);
-}
diff --git a/sources/mainfer.c b/sources/mainfer.c
index 732e1cf..0b46840 100644
--- a/sources/mainfer.c
+++ b/sources/mainfer.c
@@ -3,10 +3,10 @@
 /*                                                        :::      ::::::::   */
 /*   mainfer.c                                          :+:      :+:    :+:   */
 /*                                                    +:+ +:+         +:+     */
-/*   By: rarobert <rarobert@student.42sp.org.br>    +#+  +:+       +#+        */
+/*   By: feralves <feralves@student.42sp.org.br>    +#+  +:+       +#+        */
 /*                                                +#+#+#+#+#+   +#+           */
 /*   Created: 2023/07/31 11:55:34 by feralves          #+#    #+#             */
-/*   Updated: 2023/08/20 16:24:34 by rarobert         ###   ########.fr       */
+/*   Updated: 2023/08/20 15:33:29 by feralves         ###   ########.fr       */
 /*                                                                            */
 /* ************************************************************************** */
 
@@ -82,21 +82,21 @@ void	print_map(t_map *mapped)
 	}
 }
 
-t_map	*map_reader(int fd, t_input *input)
+t_map	*map_maker(void)
 {
-	t_map	*map;
-	map = malloc(sizeof(t_map));
-	map->ceiling = input->c;
-	map->floor = input->f;
-	map->east = input->ea_fd;
-	map->west = input->we_fd;
-	map->north = input->no_fd;
-	map->south = input->so_fd;
-	map->y_len = input->map_height * TILE_SIZE;
-	map->x_len = input->map_width * TILE_SIZE;
-	map->map = read_map(fd, input);
-	map->proj_plane = (map->x_len / 2) / tan(FOV / 2);
-	return (map);
+	t_map	*mapped;
+	mapped = malloc(sizeof(t_map));
+	mapped->ceiling = 0xFF444444;
+	mapped->floor = 0xFF000000;
+	mapped->east = 0xFFFF0000;
+	mapped->west = 0xFF00FF00;
+	mapped->north = 0xFF0000FF;
+	mapped->south = 0xFFFFFFFF;
+	mapped->y_len = 13 * TILE_SIZE;
+	mapped->x_len = 20 * TILE_SIZE;
+	mapped->map = temp_map;
+	mapped->proj_plane = (mapped->x_len / 2) / tan(FOV / 2);
+	return (mapped);
 }
 
 t_player	*start_player(t_map *map)
diff --git a/sources/mainrap.c b/sources/mainrap.c
index 6121cd2..9396ddc 100644
--- a/sources/mainrap.c
+++ b/sources/mainrap.c
@@ -6,7 +6,7 @@
 /*   By: rarobert <rarobert@student.42sp.org.br>    +#+  +:+       +#+        */
 /*                                                +#+#+#+#+#+   +#+           */
 /*   Created: 2023/08/16 18:22:57 by rarobert          #+#    #+#             */
-/*   Updated: 2023/08/20 16:08:45 by rarobert         ###   ########.fr       */
+/*   Updated: 2023/08/16 20:38:50 by rarobert         ###   ########.fr       */
 /*                                                                            */
 /* ************************************************************************** */
 
@@ -26,202 +26,16 @@ t_input	*start_input(void)
 	input->has_c = FALSE;
 	input->c = 0;
 	input->f = 0;
-	input->map_width = 0;
-	input->map_height = 0;
 	return (input);
 }
 
-t_map_line	*new_map_node(void)
-{
-	t_map_line	*new;
-
-	new = (t_map_line *)malloc(sizeof(t_map_line));
-	new->next = NULL;
-	new->line = NULL;
-	return (new);
-}
-
-int	verify_map(t_map_line *map, t_input *input, int inside_map)
-{
-	char		*trimmed;
-
-	while (map->next)
-	{
-		trimmed = ft_strtrim_whitespaces(map->line);
-		if (trimmed == NULL || trimmed[0] == 0)
-		{
-			if (inside_map == TRUE)
-				inside_map = FALSE;
-		}
-		else if (inside_map == FALSE)
-		{
-			free(trimmed);
-			return (-1);
-		}
-		else
-		{
-			if (input->map_width < ft_strlen(trimmed))
-				input->map_width = ft_strlen(trimmed);
-			input->map_height++;
-		}
-		free(trimmed);
-		map = map->next;
-	}
-	return (0);
-}
-
-t_map_line	*skip_empty_lines(t_map_line *start)
-{
-	t_map_line	*temp;
-	char		*line;
-
-	temp = start;
-	while (start)
-	{
-		line = ft_strtrim_whitespaces(start->line);
-		if (line[0] != 0)
-			break ;
-		temp = start->next;
-		free(start->line);
-		free(start);
-		start = temp;
-		free(line);
-	}
-	free(line);
-	return (start);
-}
-
-int	get_tile(char c)
-{
-	if (c == '0')
-		return (0);
-	if (c == '1')
-		return (1);
-	if (c == 'N')
-		return (2);
-	if (c == 'S')
-		return (3);
-	if (c == 'W')
-		return (4);
-	if (c == 'E')
-		return (5);
-	if (c == ' ')
-		return (9);
-	ft_error("Invalid character inside map");
-	return (-1);
-}
-
-void	free_stuff(t_map_line *map_line, t_input *input)
-{
-	t_map_line	*aux;
-
-	while (map_line->next)
-	{
-		aux = map_line;
-		map_line = map_line->next;
-		free(aux->line);
-		free(aux);
-	}
-	free(map_line->line);
-	free(map_line);
-	free(input);
-}
-
-void	free_all(t_map_line *map_line, t_input *input, int **map)
-{
-	size_t	i;
-
-	i = 0;
-	while (map[i])
-	{
-		free (map[i]);
-		i++;
-	}
-	free(map);
-	free_stuff(map_line, input);
-}
-
-int	**get_map(t_map_line *start, t_input *input)
-{
-	int		**map;
-	size_t	counter;
-	size_t	iterator;
-
-	counter = 0;
-	map = (int **)malloc(sizeof(int *) * input->map_height);
-	while (counter < input->map_height)
-	{
-		iterator = 0;
-		map[counter] = (int *)malloc(sizeof(int) * input->map_width);
-		while (iterator < input->map_width)
-		{
-			if (iterator + 1 >= ft_strlen(start->line))
-				map[counter][iterator] = get_tile('0');
-			else
-				map[counter][iterator] = get_tile(start->line[iterator]);
-			if (map[counter][iterator] == -1)
-				free_all(start, input, map);
-			iterator++;
-		}
-		start = start->next;
-		counter++;
-	}
-	return (map);
-}
-
-int	**read_map(int fd, t_input *input)
-{
-	char		*line;
-	t_map_line	*start;
-	t_map_line	*node;
-	int			**map;
-
-	start = new_map_node();
-	node = start;
-	line = get_next_line(fd);
-	while (line)
-	{
-		node->line = line;
-		node->next = new_map_node();
-		node = node->next;
-		line = get_next_line(fd);
-	}
-	close(fd);
-	start = skip_empty_lines(start);
-	if (verify_map(start, input, TRUE) == -1)
-		ft_error("Invalid map");
-	map = get_map(start, input);
-	free_stuff(start, input);
-	return (map);
-}
-
-t_map	*map_reader(int fd, t_input *input)
-{
-	t_map	*map;
-	map = malloc(sizeof(t_map));
-	map->ceiling = input->c;
-	map->floor = input->f;
-	map->east = input->ea_fd;
-	map->west = input->we_fd;
-	map->north = input->no_fd;
-	map->south = input->so_fd;
-	map->y_len = input->map_height;
-	map->x_len = input->map_width;
-	map->map = read_map(fd, input);
-	return (map);
-}
-
 int	main(void)
 {
-	int			fd;
-	t_input		*input;
-	char		**map;
-	char		*line;
-	char		*trimmed;
-	size_t		i;
-	size_t		j;
-	t_map		*full_map;
-
+	int		fd;
+	t_input	*input;
+	char	**map;
+	char	*line;
+	char	*trimmed;
 
 	input = start_input();
 	map = malloc(sizeof(char *) * 3);
@@ -242,28 +56,9 @@ int	main(void)
 		line = get_next_line(fd);
 	}
 	free(line);
-	full_map = map_reader(fd, input);
+	printf("ceiling = %d\tfloor = %d\n", input->c, input->f);
+	printf("fds:[%d,%d,%d,%d]\n", input->no_fd, input->so_fd, input->we_fd, input->ea_fd);
+	// input->map = get_map(fd);
 	close(fd);
-	i = 0;
-	while (i < 16)
-	{
-		j = 0;
-		while (j < 33)
-		{
-			printf("%d", full_map->map[i][j]);
-			j++;
-		}
-		printf("\n");
-		free(full_map->map[i]);
-		i++;
-	}
-	free(full_map->map);
-	free(map[0]);
-	free(map[1]);
-	free(map[2]);
-	free(map);
-	free(full_map);
-	i = 0;
-	// free(final_map, )
 	// return (input);
 }
